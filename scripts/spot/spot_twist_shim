#!/usr/bin/env python
import rospy
import math
import time
from sensor_msgs.msg import Joy
from geometry_msgs.msg import Twist, TwistStamped
from std_msgs.msg import Bool
from std_srvs.srv import SetBool, SetBoolResponse


class MavTwistShim(object):
        
    def __init__(self):
        self.twist_pub = rospy.Publisher("/spot/cmd_vel", Twist, queue_size=1)
        self.joy_sub = rospy.Subscriber("/joy", Joy, self.joy_cb)
        self.last_joy_time = 0.
        self.msg = None


    def run(self):
        r = rospy.Rate(50)

        while not rospy.is_shutdown():
            if time.time() - self.last_joy_time > 0.2 or self.msg is None:
                r.sleep()
                continue

            x = self.msg.axes[1]
            y = self.msg.axes[0]
            z = self.msg.axes[2]

            lt = 0
            if math.fabs(x) < 0.1:
                x = 0.
                lt += 1
            if math.fabs(y) < 0.1:
                y = 0.
                lt += 1
            if math.fabs(z) < 0.1:
                z = 0.
                lt += 1
            
            if lt == 3:
                r.sleep()
                continue

            twist_msg = Twist()
            twist_msg.linear.x = x
            twist_msg.linear.y = y
            twist_msg.angular.z = z * 1.2

            self.twist_pub.publish(twist_msg)
            r.sleep()

    def joy_cb(self, msg):
        self.last_joy_time = time.time()
        self.msg = msg


if __name__ == "__main__":
    rospy.init_node('joy_spot_shim')
    node = MavTwistShim()
    node.run()
